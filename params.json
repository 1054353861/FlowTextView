{"name":"Flowtextview","tagline":"A wrapping TextView for Android","body":"FlowTextView\r\n============\r\n\r\nA wrapping TextView for Android\r\n\r\nOriginal project on Google code https://code.google.com/p/android-flowtextview/\r\n\r\n![Logo](http://i.imgur.com/iyntFbz.png)\r\n\r\n\r\nA TextView that extends RelativeLayout. The text will wrap around any child views inside the layout.\r\n\r\nThis widget has basic support for HTML using Html.fromHtml(\"< you markup ... />\") It will recognise links, bold italic etc. \r\n\r\nHow to use\r\n--------\r\n\r\nAdd to your XML layout with your child views inside it:\r\n```xml\r\n<com.deanwild.flowtext.FlowTextView\r\n\tandroid:id=\"@+id/ftv\"\r\n\tandroid:layout_width=\"fill_parent\"\r\n\tandroid:layout_height=\"wrap_content\" >\r\n\r\n\t\t<ImageView\r\n\t\t\tandroid:layout_width=\"wrap_content\"\r\n\t\t\tandroid:layout_height=\"wrap_content\"\r\n\t\t\tandroid:layout_alignParentLeft=\"true\"\r\n\t\t\tandroid:layout_alignParentTop=\"true\"\r\n\t\t\tandroid:padding=\"10dip\"\r\n\t\t\tandroid:src=\"@drawable/android\"/>\r\n\r\n\t\t<ImageView\r\n\t\t\tandroid:layout_width=\"wrap_content\"\r\n\t\t\tandroid:layout_height=\"wrap_content\"\r\n\t\t\tandroid:layout_alignParentRight=\"true\"\r\n\t\t\tandroid:layout_marginTop=\"400dip\"\r\n\t\t\tandroid:padding=\"10dip\"\r\n\t\t\tandroid:src=\"@drawable/android2\"/>\r\n</com.deanwild.flowtext.FlowTextView>\r\n```\r\n\r\nThen in your code:\r\n```java\r\n\t\tFlowTextView flowTextView = (FlowTextView) findViewById(R.id.ftv);\r\n        Spanned html = Html.fromHtml(\"<html>Your html goes here....\");\r\n        flowTextView.setText(html);\r\n```\r\n\r\nDownload\r\n--------\r\n\r\nWill be publishing to maven shortly. For now you will need to check out and build manually.\r\n\r\n\r\nLicense\r\n-------\r\n\r\n    Copyright 2014 Dean Wild\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n\r\nHistory\r\n-------\r\n\r\nI needed to have a text wrap around images and other views in an Android App but I was surprised and frustrated to discover that there was no way to do this natively.\r\n\r\nThe general consensus was that the only practical way to achieve this was to use WebViews.\r\n\r\nUsing webviews is a bit bloaty and overkill to achieve this. We lose the direct control and performance of using native widgets.\r\n\r\nSo I developed a native widget which extends RelativeLayout (I figured this was more versatile than LinearLayout) which is capable of painting text around its child views.\r\n\r\nThe code is still a little rough and I suspect it could be vastly improved in many areas but it seems to work quite well.\r\n\t\r\nTODO\r\n--------\r\n\r\n - Add support for parameters to be supplied directly in XML layout.\r\n \r\n - Improve HTML support. For now it can handle basic tags like <b> <i> <br> and <a> but it would be nice to support everything\r\n \r\n - Add support for Right to Left text printing.\r\n \r\n - Performance - this can always be improved. The larger the text content the slower this beast gets at the moment. Perhaps ART might do the trick though\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}